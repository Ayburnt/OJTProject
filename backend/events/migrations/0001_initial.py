# Generated by Django 5.2.4 on 2025-08-13 06:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Reg_Form_Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_label', models.CharField(max_length=200)),
                ('question_type', models.CharField(choices=[('short', 'Short'), ('long', 'Long'), ('radio', 'Radio'), ('checkbox', 'Checkbox'), ('rating', 'Rating')], default='short', max_length=20)),
                ('is_required', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Reg Form Question',
                'verbose_name_plural': 'Reg Form Questions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('event_code', models.CharField(unique=True)),
                ('audience', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], default='public', max_length=20)),
                ('private_code', models.CharField(blank=True, max_length=20, null=True)),
                ('category', models.CharField(max_length=100)),
                ('event_type', models.CharField(max_length=50)),
                ('meeting_platform', models.CharField(blank=True, max_length=100, null=True)),
                ('meeting_link', models.URLField(blank=True, max_length=500, null=True)),
                ('event_poster', models.ImageField(blank=True, null=True, upload_to='event/event_posters/')),
                ('duration_type', models.CharField(choices=[('single', 'Single'), ('multiple', 'Multiple')], max_length=50)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('venue_place_id', models.CharField(blank=True, max_length=255, null=True)),
                ('venue_name', models.CharField(blank=True, max_length=500, null=True)),
                ('venue_address', models.CharField(blank=True, max_length=500, null=True)),
                ('age_restriction', models.CharField(choices=[('all', 'All'), ('restricted', 'Restricted'), ('guardian_needed', 'Guardian Needed')], max_length=100)),
                ('age_allowed', models.CharField(blank=True, max_length=20, null=True)),
                ('parking', models.CharField(blank=True, max_length=100, null=True)),
                ('event_qr_link', models.URLField(blank=True, max_length=500, null=True)),
                ('event_qr_image', models.ImageField(blank=True, null=True, upload_to='event/qr_codes/')),
                ('posting_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('isFee_paid', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('cancelled', 'Cancelled'), ('pending', 'Pending'), ('completed', 'Completed'), ('ongoing', 'Ongoing')], default='pending', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to=settings.AUTH_USER_MODEL, to_field='user_code')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question_Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_value', models.TextField(blank=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='events.reg_form_question')),
            ],
            options={
                'verbose_name': 'Question Option',
                'verbose_name_plural': 'Question Options',
            },
        ),
        migrations.CreateModel(
            name='Reg_Form_Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_template', to=settings.AUTH_USER_MODEL, to_field='user_code')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reg_form_template', to='events.event', to_field='event_code')),
            ],
            options={
                'verbose_name': 'Reg Form Template',
                'verbose_name_plural': 'Reg Form Templates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='reg_form_question',
            name='regForm_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='events.reg_form_template'),
        ),
        migrations.CreateModel(
            name='Ticket_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('seating_map', models.ImageField(blank=True, null=True, upload_to='event/seating_map/')),
                ('quantity_total', models.IntegerField()),
                ('quantity_available', models.IntegerField()),
                ('is_selling', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_types', to='events.event', to_field='event_code')),
            ],
            options={
                'verbose_name': 'Ticket Type',
                'verbose_name_plural': 'Ticket Types',
                'ordering': ['-created_at'],
            },
        ),
    ]
