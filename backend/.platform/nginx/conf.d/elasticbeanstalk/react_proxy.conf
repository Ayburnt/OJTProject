# .platform/nginx/conf.d/elasticbeanstalk/react_proxy.conf

# This configuration block is automatically included by Elastic Beanstalk's Nginx setup.
# It customizes how Nginx handles requests for your application.

# Serve the React frontend for all requests that are not specifically for the API.
# The 'root' directive points to the 'dist' folder, which should be at the
# root level of your deployment bundle (e.g., /var/app/current/dist).
location / {
    # Set the root directory for serving static files for this location block.
    # /var/app/current/ is where your application bundle is extracted.
    root /var/app/current/dist;

    # This is crucial for Single Page Applications (SPAs) like React.
    # It tries to serve the requested URI. If it's not found (e.g., /about),
    # it falls back to serving index.html, allowing React Router to handle the routing.
    try_files $uri /index.html =404;
}

# Proxy all requests starting with /api/ to your Django backend.
# This assumes your Django REST Framework API endpoints are prefixed with '/api/'.
# Adjust '/api/' if your Django API uses a different prefix.
location /api/ {
    # Proxy requests to the Gunicorn server running your Django application.
    # Gunicorn typically listens on 127.0.0.1:8000 (configurable via Procfile or EB settings).
    proxy_pass http://127.0.0.1:8000;

    # Important headers for proxying:
    # Host header: Passes the original host name to the backend.
    proxy_set_header Host $host;
    # X-Real-IP: Passes the real client IP address.
    proxy_set_header X-Real-IP $remote_addr;
    # X-Forwarded-For: Appends the client's IP to the list of proxy IPs.
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # X-Forwarded-Proto: Passes the original protocol (HTTP or HTTPS).
    proxy_set_header X-Forwarded-Proto $scheme;

    # Optional: If your Django app requires specific headers for CORS or other reasons, add them here.
    # proxy_set_header X-Forwarded-Host $host;
    # proxy_set_header X-Forwarded-Port $server_port;
}

# Optional: If you have Django's collected static files (e.g., for Django Admin)
# that are *not* part of your React 'dist' folder and are accessed via '/static/'
# This block assumes `STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')` in Django
# and that `python manage.py collectstatic` has run.
# location /static/ {
#     # Use 'alias' because the path to 'staticfiles' is likely different from the URI path.
#     alias /var/app/current/staticfiles/;
#     # Recommended caching headers for static assets
#     expires 30d;
#     add_header Cache-Control "public";
# }

# Optional: If you have Django's collected media files
# location /media/ {
#     alias /var/app/current/media/; # Adjust if your MEDIA_ROOT is different
#     expires 30d;
#     add_header Cache-Control "public";
# }